{
  
    
        "post0": {
            "title": "Covid spread",
            "content": "How to use the charts . The charts below offer a few ways of exploring covid data and seeing the evolution of cases and deaths in different countries or regions. . SARS-CoV-2 is the virus which causes Covid-19. For simplicity, I&#39;ll use the word &quot;covid&quot; interchangeably below. The spread of covid is influenced by inherent characteristics of the virus and the society in which it is present. The inherent contagiousness of covid shouldn&#39;t change much (although viruses evolve like any other living organism, and it is possible that covid evolves to something less deadly given that humanity has a strong incentive to obliterate the virus in its current form). The society it operates in can change radically, and lock-downs or mandatory mask wearing are attempts to reduce the spread (or R0) of the virus. . I hope the charts below will be useful as a tool to compare how the virus spreads in different societies, and even to help predict outcomes for deaths or cases in different countries or regions. I&#39;ve used data from John Hopkins CSSE via an API built by Kyle Redelinghuys. The data comes from various national and supranatoinal health authorities and is updated once a day. There is provincial data for some countries (e.g. Canadian and US States, Chinese provinces). . The charts below show total number of deaths and confirmed cases. Data on total cases should be viewed with caution as they are so dependent on how much testing is actually being done. Death data is much more indicative, but a lagging indicator of spread and should also be viewed with some caution as some countries (such as Italy) have a very broad definition of deaths caused by covid, and some do not record so many. For example, UK data only includes deaths in hospitals and not in the community or care homes. There is also the issue of reporting delays as deaths can take a few days to be reported, so you can&#39;t put too much weight on any given datapoint. . The &quot;doubling time&quot; charts are a really useful way of interpretting how curves are being flattened in an easy to interpret way. The data is just the rate of increase expressed as the number of days necessary to double the total number of cases or deaths. A region will be flattening the curve if their doubling time data look like a hockey stick - e.g. Italy or Spain. . Use these charts in conjunction with information about a region&#39;s response to covid to test hyphotheses about the effectiveness of public health measures. . Observations . The growth of US deaths remains worryingly high. The total deaths in the US are still doubling every four days and the curve is not bending at all. Death rates lag public health measures by two weeks or so, so the change in US death rates may be yet to come. Stay at home orders were issued between 19 March (California) and 4 April (Florida) with several states not having issued orders at all. Judging by death rates, no US states look to be entering the &quot;hockey stick&quot; stage of their growth rates yet. . In Europe, most countries appear to be slowing the increase of deaths. The UK is at a relatively early stage. . Chart below shows that death rate in the US is not showing any signs of improvment. UK is in the early days but change in death rate is so far consistent with Spanish and Italian experience. . Testing universal mask use . Mask wearing as a public health measure has been controversial with the WHO and CDC in United States arguing against masks (other than for healthcare professionals) for much of the crisis. However people such as Jeremy Howard (research scientist and founder of fast.ai, an articial intelligence organisation) and Nassim Taleb argue strongly for mask use. Jeremy made a short film advocating universal use of simple masks, which is worth watching. . Many Asian societies have a much wider use of masks than in the West and it has been noted that flatter curves in China and South Korea are correlated with more widespread mask use. However there are many other differentiating factors such as very comprehensive testing and contact tracing in South Korea which we just don&#39;t have in the West. Czechia and Austria have both mandated universal mask use in Europe. Other than that, these countries share more similarities with other European nations. The impact on death toll from these mask rules should be seen around mid-April for Czechia and end-April for Austria. It will be interesting to see whether we see any differences in these charts from those dates. . Keep an eye on how Austria and Czechia death rate evolves relative to other European countires without universal mask use. Regardless of masks, Austria and Czechia do appear to have flattened the curve quicker than Italy, France and Spain. . Full chart dashboard . The charts show either total number of deaths or cases. These are shown with a log scale and a dashed line representing what a daily 33% increase in deaths/cases would look like. . The &#39;doubling time&#39; charts are scatter plot charts showing the amount of time it would take the death or confirmed cases total to double if the rate of increase from the previous day continues. These charts have a line of best fit plotted, using the LOESS (local regression) method. The LOESS is intended to help the user visually gauge the trend of case increases rather than help make forecasts. . The charts update every day so should always include the most recent data. . Tip: Click (Shift+ for multiple) on states in the legend to filter the visualizations below. Click outside the legend to highlight all states. . Tip: Hover the cursor over a point to see the underlying data - e.g. confirmed cases, deaths, rate of increase etc. In my notion &quot;cf_&quot; means &quot;compound factor&quot;. So &quot;cf_deaths = 1.2&quot; means that the number of deaths increased by 20% from the previous day. .",
            "url": "https://alexxcollins.github.io/dru_trading/covid-19/2020/04/08/covid-dashboard.html",
            "relUrl": "/covid-19/2020/04/08/covid-dashboard.html",
            "date": " • Apr 8, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Covid spread",
            "content": "This is a first blog post. It contains some interactive charts. Please let me know via comments if there is anything else you&#39;d like to see. . This shows the number of deaths on days following the tenth death, for varioius countries, using a long scale and . Tip :Click (Shift+ for multiple) on states in the legend to filter the visualizations below. Click outside the legend to highlight all states. . This chart shows a measure of growth of deaths. Each dot represents the number of days it will take for the total number of deaths to double, based on the rate of increase of deaths from the previous day. . Tip :Click (Shift+ for multiple) on states in the legend to filter the visualizations below. Click outside the legend to highlight all states. .",
            "url": "https://alexxcollins.github.io/dru_trading/covid-19/2020/04/04/covid-spread.html",
            "relUrl": "/covid-19/2020/04/04/covid-spread.html",
            "date": " • Apr 4, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # Title &gt; Awesome summary - toc:true- branch: master- badges: true- comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . #collapse-hide import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . #collapse-show cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # single-value selection over [Major_Genre, MPAA_Rating] pairs # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(movies).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(movies).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=alt.Y(&#39;IMDB_Rating:Q&#39;, axis=alt.Axis(minExtent=30)), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=600, height=400 ) . Example 3: More Tooltips . # select a point for which to provide details-on-demand label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=700, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; df = pd.read_json(movies) # display table with pandas df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://alexxcollins.github.io/dru_trading/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://alexxcollins.github.io/dru_trading/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This is where you put the contents of your About page. Like all your pages, it’s in Markdown format. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://alexxcollins.github.io/dru_trading/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

}